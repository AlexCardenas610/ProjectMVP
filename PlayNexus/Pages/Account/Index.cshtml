@page
@model PlayNexus.Pages.Account.IndexModel
@{
    ViewData["Title"] = "Account";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4 left-hub">
            <div class="card">
                <div class="card-body text-center">
                    <h2>@Model.CurrentUser?.UserName</h2>
                    <p class="text-muted">Account</p>
                    <!-- Profile picture display -->
                    <img id="profilePic" src="@(string.IsNullOrEmpty(Model.ProfilePictureUrl) ? "https://via.placeholder.com/200" : Model.ProfilePictureUrl)" class="mb-3" alt="Profile Picture" style="width: 200px; height: 200px; object-fit: cover; border-radius: 50%; border: 3px solid #dee2e6; box-shadow: 0 0 10px #ccc;" />
                    <form id="uploadForm" method="post" enctype="multipart/form-data" asp-page-handler="UploadPicture">
                        <div class="mb-3">
                            <label for="ProfilePicture" class="form-label">Upload Profile Picture</label>
                            <input type="file" id="ProfilePicture" name="ProfilePicture" class="form-control" accept="image/*" required />
                        </div>
                        <button type="submit" class="btn btn-secondary btn-sm w-100">Upload</button>
                        <div id="uploadingText" class="text-center text-secondary mb-1" style="display:none;">Uploading ...</div>
                        <div class="progress mt-2" style="height: 16px; display: none;">
                            <div id="uploadProgress" class="progress-bar" role="progressbar" style="width: 0%"></div>
                        </div>
                    </form>
                    <script>
                        const uploadForm = document.getElementById('uploadForm');
                        const progressBar = document.querySelector('.progress');
                        const progress = document.getElementById('uploadProgress');
                        const uploadingText = document.getElementById('uploadingText');
                        uploadForm.addEventListener('submit', function(e) {
                            e.preventDefault();
                            const formData = new FormData(uploadForm);
                            const xhr = new XMLHttpRequest();
                            xhr.open('POST', window.location.pathname + '?handler=UploadPicture', true);
                            xhr.upload.onprogress = function(e) {
                                if (e.lengthComputable) {
                                    const percent = (e.loaded / e.total) * 100;
                                    progressBar.style.display = 'block';
                                    uploadingText.style.display = 'block';
                                    progress.style.width = percent + '%';
                                    progress.innerText = Math.round(percent) + '%';
                                }
                            };
                            xhr.onload = function() {
                                if (xhr.status === 200) {
                                    progress.style.width = '100%';
                                    progress.innerText = '100%';
                                    setTimeout(() => { window.location.reload(); }, 500);
                                } else {
                                    progressBar.style.display = 'none';
                                    uploadingText.style.display = 'none';
                                    alert('Upload failed.');
                                }
                            };
                            xhr.onerror = function() {
                                progressBar.style.display = 'none';
                                uploadingText.style.display = 'none';
                                alert('Upload failed.');
                            };
                            progress.style.width = '0%';
                            progress.innerText = '';
                            progressBar.style.display = 'block';
                            uploadingText.style.display = 'block';
                            xhr.send(formData);
                        });
                    </script>
                </div>
            </div>
            <div class="card mt-3">
                <div class="card-header">
                    Friends
                </div>
                <ul class="list-group list-group-flush">
                    @if (Model.Friends != null && Model.Friends.Any())
                    {
                        foreach (var friend in Model.Friends)
                        {
                            <li class="list-group-item">@friend.UserName</li>
                        }
                    }
                    else
                    {
                        <li class="list-group-item">No friends added yet.</li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-8">
            @if (TempData["ProfileSaved"] != null) {
                <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                    <strong>Changes saved.</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            <form method="post" asp-page-handler="UpdateProfile">
                <div class="card">
                    <div class="card-header">
                        Edit Account
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="Biography" class="form-label">Biography</label>
                            <textarea asp-for="Biography" class="form-control" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label asp-for="GamingInterests" class="form-label">Gaming Interests</label>
                            <textarea asp-for="GamingInterests" class="form-control" rows="3"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </div>
            </form>

            <div class="card mt-3">
                <div class="card-header">
                    Viewing Activity
                </div>
                <ul class="list-group list-group-flush">
                    @if (Model.ViewingActivity != null && Model.ViewingActivity.Any())
                    {
                        foreach (var activity in Model.ViewingActivity)
                        {
                            <li class="list-group-item">@activity</li>
                        }
                    }
                    else
                    {
                        <li class="list-group-item">No recent activity.</li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
